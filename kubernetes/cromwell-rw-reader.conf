include required(classpath("application.conf"))

google {

  application-name = "cromwell"

  auths = [
    {
      name = "application-default"
      scheme = "application_default"
    }
  ]
}

engine {
  filesystems {
    gcs {
      auth = "application-default"
      project = "broad-dsde-cromwell-dev"
    }
  }
}


call-caching {
  # Allows re-use of existing results for jobs you've already run
  # (default: false)
  enabled = true

  # Whether to invalidate a cache result forever if we cannot reuse them. Disable this if you expect some cache copies
  # to fail for external reasons which should not invalidate the cache (e.g. auth differences between users):
  # (default: true)
  invalidate-bad-cache-results = true
}

system.io.number-of-requests = 10240611
system.input-read-limits.lines = 500000
system.workflow-restart=false
system.max-workflow-launch-count=0
system.new-workflow-poll-rate=999999
services.MetadataService.config.metadata-summary-refresh-interval = "Inf"

backend {
  default = "Papi"
  enabled = ["Papi"]
  providers {
    Papi {
      actor-factory = "cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory"
      config {
        project = "broad-dsde-cromwell-dev"
        root = "gs://cromwell-dev-kube/"
        maximum-polling-interval = 600
        concurrent-job-limit = 1000

        genomics {
          auth = "application-default"
          endpoint-url = "https://genomics.googleapis.com/"
        }

        filesystems {
          gcs {
            auth = "application-default"
            project = "broad-dsde-cromwell-dev"
          }
        }
      }
    }
  }
}

database {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "com.mysql.jdbc.Driver"
    url = "jdbc:mysql://mysql-gcloud-proxy.default:3306/cromwell?rewriteBatchedStatements=true&useSSL=false"
    user = "cromwell"
    password = "cromwell"
    connectionTimeout = 60000
    queueSize = 8000
  }
}
