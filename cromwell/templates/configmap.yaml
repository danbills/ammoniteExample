apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "cromwell.fullname" . }}-configuration
data:

  fluentd.conf: |
      <source>
          @type tail
          path /shared/cromwell_metadata.log
          pos_file /cromwell.pos
          limit_recently_modified 24h
          tag cromwell
          <parse>
              @type none
          </parse>
      </source>
      <match **>
          @type gcs

          project broad-dsde-cromwell-dev
          keyfile /etc/fluentd/sa.json
          bucket debtest3
          object_key_format %{path}%{time_slice}_%{index}.%{file_extension}
          path logs/${tag}/%Y/%m/%d/

          # if you want to use ${tag} or %Y/%m/%d/ like syntax in path / object_key_format,
          # need to specify tag for ${tag} and time for %Y/%m/%d in <buffer> argument.
          <buffer tag,time>
            @type file
            path /var/log/fluent/gcs
            timekey 60 # 1 hour partition
            timekey_wait 1m
            timekey_use_utc true # use utc
          </buffer>
      </match>
  sa.json: |
{{indent 8 .Values.google.service_account_json }}
  cromwell.conf: |
    include required(classpath("application.conf"))

    database {
      profile = "slick.jdbc.MySQLProfile$"
      db {
        driver = "com.mysql.jdbc.Driver"
        url = "jdbc:mysql://{{ .Release.Name }}-mysql:3306/cromwell?rewriteBatchedStatements=true&useSSL=false"
        user = "cromwell"
        password = "{{ .Values.mysql.mysqlUser }}"
        connectionTimeout = 60000
        queueSize = 8000
      }
    }
    filesystems {
        gcs {
          # A reference to a potentially different auth for manipulating files via engine functions.
          auth = "kube-service-account"

          # Google project which will be billed for requests on buckets with requester pays enabled
          project = "{{ .Values.google.project }}"

          caching {
            # When a cache hit is found, the following duplication strategy will be followed to use the cached outputs
            # Possible values: "copy", "reference". Defaults to "copy"
            # "copy": Copy the output files
            # "reference": DO NOT copy the output files but point to the original output files instead.
            #              Will still make sure than all the original output files exist and are accessible before
            #              going forward with the cache hit.
            duplication-strategy = "copy"
          }

        }
    }
    backend {
      default = "Papi"
      enabled = ["Papi"]
      providers {
        Papi {
          actor-factory = "cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory"
          config {
            project = "{{ .Values.google.project }}"
            root = "gs://{{ .Values.google.executionBucket }}/"
            maximum-polling-interval = 600
            concurrent-job-limit = 1000

            genomics {
              auth = "kube-service-account"
              endpoint-url = "https://genomics.googleapis.com/"
            }

            filesystems {
              gcs {
                auth = "kube-service-account"
                project = "{{ .Values.google.project }}"
              }
            }
          }
        }
      }
    }

    google {
        auths = [
            {
               name = "kube-service-account"
               scheme = "service_account"
               service-account-id = {{ .Values.google.service_account_id }}
               json-file = "/conf/sa.json"
            }
        ]
    }
